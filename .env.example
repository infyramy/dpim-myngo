# üåê Environment Configuration for myNGO
# Copy this file to .env and modify values as needed

# =============================================================================
# üöÄ APPLICATION PORTS (Both services in same container)
# =============================================================================

# Frontend port (where users access the app)
# Used in: Dockerfile simple stage, docker-compose.yml
# Default: 3000 (what users will access)
# Coolify setup: Map server:3200 -> container:3000
FRONTEND_PORT=3000

# Backend API port (where API endpoints are served)
# Used in: Dockerfile simple stage, src/server/index.ts
# Default: 3001 (internal API port)
# Coolify setup: Map server:3201 -> container:3001 (if needed)
API_SERVER_PORT=3001

# =============================================================================
# üèóÔ∏è DEPLOYMENT CONFIGURATION
# =============================================================================

# Deployment type for Docker builds
# Used in: Dockerfile to choose deployment strategy
# Options: "simple" (single container) | "production" (nginx + separate backend)
# For Coolify: Use "simple"
DEPLOYMENT_TYPE=simple

# Application environment
# Used in: Server auth middleware, frontend config
# Options: "development" | "production" | "staging"
NODE_ENV=development

# =============================================================================
# üåê API CONFIGURATION
# =============================================================================

# Internal API URL (used by Docker containers)
# Should match: http://localhost:${API_SERVER_PORT}
# Used in: docker-compose.yml environment variables
API_URL=http://localhost:3001

# Frontend API URL (used by browser)
# For development: http://localhost:3001
# For Coolify: http://your-server-ip:3201
# Used in: Frontend to make API calls
VITE_API_URL=http://localhost:3001

# API timeout (optional)
# Used in: Frontend config service
API_TIMEOUT=30000

# =============================================================================
# üóÑÔ∏è DATABASE CONFIGURATION (MySQL)
# =============================================================================

# Database connection settings
# Used in: src/server/config/database.ts
DB_HOST=localhost
DB_PORT=3306
DB_USER=admin
DB_PASSWORD=secure_password
DB_NAME=myNGO

# =============================================================================
# üîê JWT SECURITY (CRITICAL)
# =============================================================================

# JWT token secrets - CHANGE THESE IN PRODUCTION!
# Used in: src/server/utils/jwt.ts
# Generate with: openssl rand -base64 64
JWT_ACCESS_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-this-in-production

# =============================================================================
# üé® FRONTEND BUILD VARIABLES
# =============================================================================

# App metadata
VITE_APP_NAME=myNGO
VITE_APP_VERSION=1.0.0
VITE_ENVIRONMENT=development

# =============================================================================
# üìß EMAIL SERVICE (Mailjet)
# =============================================================================

# Mailjet API credentials
# Used in: src/services/email/index.ts
VITE_MAILJET_API_KEY=your-mailjet-api-key
VITE_MAILJET_SECRET_KEY=your-mailjet-secret-key
VITE_DEFAULT_FROM_EMAIL=no-reply@yourdomain.com

# =============================================================================
# üê≥ DOCKER CONFIGURATION
# =============================================================================

# Docker Compose project name
COMPOSE_PROJECT_NAME=myngo

# Docker port mappings (for docker-compose only)
# Note: In Coolify, you set port mapping in the UI
DEV_PORT=5173

# =============================================================================
# üìã COOLIFY DEPLOYMENT GUIDE
# =============================================================================
#
# üîß Coolify Setup:
# 1. Set deployment type: DEPLOYMENT_TYPE=simple
# 2. Port mapping in Coolify:
#    - Frontend: Server:3200 -> Container:3000
#    - Backend:  Server:3201 -> Container:3001 (optional, if you need direct API access)
# 3. Environment variables in Coolify:
#    - FRONTEND_PORT=3000
#    - API_SERVER_PORT=3001  
#    - Set your database credentials
#    - Set your JWT secrets
#    - Set your email service keys
#
# üåê Access URLs:
# - Frontend: http://your-server-ip:3200
# - Backend API: http://your-server-ip:3201 (if port mapped)
# - Health check: http://your-server-ip:3201/api/health
#
# üè† Local Development:
# - Frontend: http://localhost:3000
# - Backend: http://localhost:3001
# - Run: docker build -t myngo . && docker run -p 3000:3000 -p 3001:3001 myngo
#
# =============================================================================