# =============================================================================
# Production Docker Compose for Coolify Deployment
# =============================================================================

version: '3.8'

services:
  # Frontend Service (Vue.js + Nginx)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: myngo-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - VITE_API_URL=${VITE_API_URL:-https://api-myngo.0o0.my}
      - VITE_ENVIRONMENT=${VITE_ENVIRONMENT:-production}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - myngo-network
    labels:
      - "app=myngo"
      - "service=frontend"

  # Backend API Service (Node.js)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: myngo-backend
    restart: unless-stopped
    ports:
      - "${API_PORT:-3001}:3001"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - API_PORT=${API_PORT:-3001}
      - API_HOST=${API_HOST:-0.0.0.0}
      - DB_HOST=${DB_HOST:-localhost}
      - DB_PORT=${DB_PORT:-3306}
      - DB_USER=${DB_USER:-root}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-myngo_production}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - CORS_ORIGINS=${CORS_ORIGINS:-https://myngo.0o0.my}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    depends_on:
      - database
    networks:
      - myngo-network
    labels:
      - "app=myngo"
      - "service=backend"

  # Database Service (MySQL)
  database:
    image: mysql:8.0
    container_name: myngo-database
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-rootpassword}
      - MYSQL_DATABASE=${DB_NAME:-myngo_production}
      - MYSQL_USER=${DB_USER:-myngo}
      - MYSQL_PASSWORD=${DB_PASSWORD:-myngopassword}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/server/migrations:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-3306}:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - myngo-network
    labels:
      - "app=myngo"
      - "service=database"

networks:
  myngo-network:
    driver: bridge
    name: myngo-network

volumes:
  mysql_data:
    driver: local
    name: myngo-mysql-data 