# =============================================================================
# Coolify Deployment Configuration for myNGO
# =============================================================================

services:
  # Single Container Deployment (Recommended)
  myngo-app:
    image: myngo
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=production
      - VITE_ENVIRONMENT=production
      - API_PORT=3001
      - FRONTEND_PORT=3000
      - VITE_API_URL=https://api-myngo.0o0.my
      - CORS_ORIGINS=https://myngo.0o0.my,https://api-myngo.0o0.my
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-3306}
      - DB_USER=${DB_USER:-myngo}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-myngo_production}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    depends_on:
      - database
      
  # Alternative: Separate Frontend Service
  frontend:
    image: myngo-frontend
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=production
      - VITE_API_URL=https://api-myngo.0o0.my
    profiles:
      - separate
      
  # Alternative: Separate Backend Service
  backend:
    image: myngo-backend
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - 3001:3001
    environment:
      - NODE_ENV=production
      - API_PORT=3001
      - DB_HOST=${DB_HOST:-database}
      - DB_PORT=${DB_PORT:-3306}
      - DB_USER=${DB_USER:-myngo}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-myngo_production}
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - CORS_ORIGINS=https://myngo.0o0.my,https://api-myngo.0o0.my
    depends_on:
      - database
    profiles:
      - separate

  # Database Service
  database:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-rootpassword}
      - MYSQL_DATABASE=${DB_NAME:-myngo_production}
      - MYSQL_USER=${DB_USER:-myngo}
      - MYSQL_PASSWORD=${DB_PASSWORD:-myngopassword}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - 3306:3306
    restart: unless-stopped

volumes:
  mysql_data:
    external: true 